{"version":3,"sources":["logo.svg","serviceWorker.js","index.js","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","server","moment","locale","PromoRow","props","state","config","settings","env","jira","fields","key","url","this","promo","replace","fetch","response","json","setState","prevProps","prevState","username","password","headers","Headers","set","Buffer","from","toString","path","method","issues","Fjira","find","j","customfield_12471","trim","className","index","index2","style","rowSpan","mes","promos","length","startDate","format","target","href","customfield_12274","isSame","data-tip","customfield_12470","expiryDate","subtract","prod","promoID","customfield_12382","bucket","customfield_12472","title","next","partners","join","devices","React","Component","buscarJiras","value","ok","alert","meses","categories","promotions","map","promoDate","m","push","placeholder","type","id","onClick","v","f"],"mappings":"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","file":"static/js/main.c427d951.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst server = \"https://www.monopolycasino.es\"\nconst promoPageLink = \"/api/config/promotions/v2/promotions-page.json\";\nmoment().locale('es')\n\n\nclass PromoRow extends React.Component{\n  constructor(props) { \n    super(props); \n    this.state = { config:{settings:{env:{}}}, jira:{fields:{}, key: null} }; \n    \n  } \n\n  componentDidMount() {\n    let url = server + this.props.promo.url.replace(\"index.html\",\"\");\n    fetch(url+\"config.json\").then(response=>response.json()).then(json => {this.setState({config: json})});\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.username != this.props.username || prevProps.password != this.props.password){\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + Buffer.from( this.props.username + \":\" + this.props.password).toString('base64'));\n\n\n        fetch(\"https://jira.gamesys.co.uk/rest/api/latest/search?jql=\\\"Path (URL) of the promotion\\\" ~ \"+ this.props.promo.path, {method:'GET', headers: headers})\n        .then(response=>response.json())\n          .then(json => {\n            if(json && json.issues && json.issues[0]){\n              let Fjira = json.issues.find(j=>j.fields.customfield_12471 && j.fields.customfield_12471.trim()==this.props.promo.path.trim());\n              if(Fjira)\n                this.setState({jira: Fjira});\n              //this.setState({jira:  json.issues[0]});\n            }\n          });\n      }\n  }\n\n  render(){\n    return (\n        <tr className={this.props.index==0 && this.props.index2!=0?'primeraMes':''}>\n          {this.props.index==0?\n            <td className=\"tdMonthName\" style={{\"vertical-align\":\"middle\"}} rowSpan={this.props.mes.promos.length}> <span >{moment(this.state.config.settings.startDate,\"DD/MM/YYYY\").format(\"MMM YY\")}</span> </td>\n          :null}\n          <td>\n            <ReactTooltip></ReactTooltip>\n            <a target=\"_blank\" href={'https://jira.gamesys.co.uk/browse/'+this.state.jira.key}>\n              {this.state.jira.key}\n            </a>\n          </td>\n          <td>\n            {this.state.jira.fields && this.state.jira.key?\n                moment(this.state.jira.fields.customfield_12274,\"YYYY-MM-DD\").isSame(moment(this.props.promo.startDate,\"DD/MM/YYYY\"))?\n                <span data-tip={\"Fecha Inicio Jira correcta: \"+this.state.jira.fields.customfield_12274}>✅</span>:\n                <span data-tip={'❌ Fecha inicio en jira: '+this.state.jira.fields.customfield_12274+''}>❌</span>\n              :<span data-tip=\"Fecha Inicio\">❓</span>}\n\n            {this.state.jira.fields && this.state.jira.key?\n                moment(this.state.jira.fields.customfield_12470,\"YYYY-MM-DD\").isSame(moment(this.props.promo.expiryDate,\"DD/MM/YYYY\").subtract(1, 'days'))?\n                <span data-tip={\"Fecha Fin Jira correcta: \"+this.state.jira.fields.customfield_12470}>✅</span>:\n                <span data-tip={'❌ Fecha fin en jira: '+this.state.jira.fields.customfield_12470+''}>❌</span>\n              :<span data-tip=\"Fecha fin\">❓</span>}\n\n            {(this.state.jira.fields && this.state.jira.key && this.state.config.settings.env.prod)?\n                this.state.config.settings.env.prod.promoID==this.state.jira.fields.customfield_12382?\n                <span data-tip={\"Promo ID Jira correcta: \"+this.state.jira.fields.customfield_12382}>✅</span>:\n                <span data-tip={'❌ Promo ID Jira: '+this.state.jira.fields.customfield_12382+''}>❌</span>\n              :<span data-tip=\"Promo Id\">❓</span>}\n\n            {(this.state.jira.fields && this.state.jira.key)?\n                 this.props.promo.bucket==this.state.jira.fields.customfield_12472||(this.state.jira.fields.customfield_12472==\"N/A\" && !this.props.promo.bucket )?\n                <span data-tip={\"Bucket Jira correcto: \"+this.state.jira.fields.customfield_12472}>✅</span>:\n                <span data-tip={'❌ Bucket Jira: '+this.state.jira.fields.customfield_12472+''}>❌</span>\n              :<span data-tip=\"Bucket\">❓</span>}\n\n\n  \n          </td>\n          <td>\n          {moment(this.props.promo.startDate,\"DD/MM/YYYY\")< moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")> moment()?<span data-tip=\"Promo live\">🔥</span>:\n              moment(this.props.promo.startDate,\"DD/MM/YYYY\") < moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")< moment()?<span data-tip=\"Promo acabada\">💀</span>:\n                moment(this.props.promo.startDate,\"DD/MM/YYYY\") > moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")> moment()?<span data-tip=\"Promo futura\">🔮</span>:\n                <span data-tip=\"Algo pasa\">❌</span>\n          }\n          </td>\n          <td>\n            <a target=\"_blank\" href={server+'/promotion/'+this.props.promo.path+\"?previewDate=\"+(moment(this.props.promo.startDate,\"DD/MM/YYYY\").format(\"DD-MM-YYYY\"))}>\n              {this.props.promo.title}\n            </a>\n          </td>\n          <td>{this.state.config.settings.env.prod?this.state.config.settings.env.prod.promoID :\"\"}</td>\n          <td className={this.props.promo.startDate==this.state.config.settings.startDate?\"green\":\"red\"}  data-tip={this.props.promo.startDate==this.state.config.settings.startDate?\"Fechas promo y schedule coinciden\":(\"Fecha promo: \"+moment(this.state.config.settings.startDate,\"DD/MM/YYYY\").format(\"DD MMM YY\"))}>\n            {moment(this.props.promo.startDate,\"DD/MM/YYYY\").format(\"DD MMM YY\") }\n          </td>\n          <td className={this.props.promo.expiryDate==this.state.config.settings.expiryDate?\"green\":\"red\"}  data-tip={this.props.promo.expiryDate==this.state.config.settings.expiryDate?\"Fechas promo y schedule coinciden\":(\"Fecha promo: \"+moment(this.state.config.settings.expiryDate,\"DD/MM/YYYY\").subtract(1,'days').format(\"DD MMM YY\"))} >\n            {moment(this.props.promo.expiryDate,\"DD/MM/YYYY\").subtract(1,'days').format(\"DD MMM YY\")}\n          </td>\n          <td>\n            {this.props.next?\n              moment(this.props.next.startDate,\"DD/MM/YYYY\")< moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")> moment()?<span data-tip=\"La promo está apareciendo en la sección próximamente\">🔥</span>:\n                moment(this.props.next.startDate,\"DD/MM/YYYY\") < moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")< moment()?<span data-tip=\"La promo apareció en su momento en la sección próximamente\">💀</span>:\n                  moment(this.props.next.startDate,\"DD/MM/YYYY\") > moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")> moment()?<span data-tip=\"La promo aparecerá en la sección próximamente\">🔮</span>:\n                  <span data-tip=\"Algo pasa\">❌</span>\n              :''\n            }\n            {this.props.next?\n              moment(this.props.next.startDate,\"DD/MM/YYYY\").isSame(moment(this.props.promo.startDate,\"DD/MM/YYYY\").subtract(5,\"days\"),'date') && this.props.next.expiryDate==this.props.promo.startDate?<span data-tip={\"Próximamente 5 días antes: \"+this.props.next.startDate + \" - \" + moment(this.props.next.expiryDate,\"DD/MM/YYYY\").subtract(1,'days').format(\"DD MMM YY\")}>✅</span>:\n                <span data-tip=\"Próximamente no es 5 días antes o no desaparece con el inicio de la promo\">❌</span>\n              :''}\n\n          </td>\n          <td>{this.props.promo.bucket}</td>\n          <td>{this.props.promo.partners?this.props.promo.partners.join(','):''}</td>\n          <td>{this.props.promo.devices}</td>\n        </tr>\n    )\n  }\n}\n\n\n\nclass App extends React.Component { \n  \n  constructor(props) { \n      super(props); \n      this.state = { promos:{}, meses:[] }; \n  } \n\n  componentDidMount() {\n      fetch(server+promoPageLink).then(response=>response.json()).then(json => {\n        var meses = [];\n        json.categories[0].promotions.map(promo=>{\n          var promoDate = moment(promo.startDate,\"DD/MM/YYYY\");\n          var mes = meses.find(m=>m.mes == promoDate.format(\"YYYYMM\"));\n          if(mes){\n            mes.promos.push(promo);\n          }else{\n            meses.push({mes: promoDate.format(\"YYYYMM\"), promos:[promo]})\n          }\n        });\n        this.setState({promos: json, meses: meses});\n      });\n  }\n\n  buscarJiras =()=>{\n\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + Buffer.from(  document.getElementById('username').value + \":\" + document.getElementById('password').value).toString('base64'));\n    fetch(\"https://jira.gamesys.co.uk/rest/api/latest/mypermissions\", {method:'GET', headers: headers}).then(\n      response=>{\n        if(response.ok)\n          this.setState({username: document.getElementById('username').value , password:document.getElementById('password').value})\n        else\n          alert(\"Error iniciando sesión en Jira\")\n      }\n    )\n  }\n  render() { \n        \n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>MCE Promotions</h2>\n          <div>\n            <input placeholder=\"Jira username\" type=\"text\" id=\"username\"></input>\n            <input placeholder=\"Jira password\" type=\"password\" id=\"password\"></input>\n            <button onClick={this.buscarJiras}>Buscar Jiras</button>\n          </div>\n          <br></br>\n          <table>\n            <thead>\n              <tr>\n                <th>Mes</th>\n                <th>Jira</th>\n                <th>Jira Errors</th>\n                <th></th>\n                <th>Title</th>\n                <th>ID</th>\n                <th>Schedule Start</th>\n                <th>Schedule End</th>\n                <th>Próximamente</th>\n                <th>Bucket</th>\n                <th>Partner</th>\n                <th>Devices</th>\n              </tr>\n            </thead>\n            <tbody>\n            {\n              /*(this.state.promos.categories)?\n              this.state.promos.categories[0].promotions.map(\n                (v, index)=>{\n                  return <PromoRow key={index} username={this.state.username} password={this.state.password}  promo={v} next={this.state.promos.categories[1].promotions.find(f=> f.path == v.path)} ></PromoRow>\n                } \n              ):null*/\n              this.state.meses.map(\n                (m, index2)=>{\n                  return m.promos.map((v, index)=>{\n                    return <PromoRow mes={m} index2={index2} index={index} key={index} username={this.state.username} password={this.state.password}  promo={v} next={this.state.promos.categories[1].promotions.find(f=> f.path == v.path)} ></PromoRow>\n\n                  });\n                }\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  } \n} \n\nexport default App;\n\n   "],"sourceRoot":""}